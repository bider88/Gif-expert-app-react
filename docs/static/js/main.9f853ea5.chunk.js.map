{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","catch","err","console","warn","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAgBhD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,GAAcA,EAAWK,OAAOC,OAAS,IAC3CR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAQT,EACRU,SAjBoB,SAACP,GACzBF,EAAeE,EAAEQ,OAAOF,Y,uBCPfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,+DAEHI,MAAMF,GAFH,cAEfG,EAFe,gBAGEA,EAAIC,OAHN,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC5BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARf,kBAUdM,GAVc,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,yBAAKc,UAAU,kDACb,yBAAKA,UAAU,YAAYC,IAAMf,EAAMgB,IAAMN,IAC7C,2BAAKA,KCDEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAChBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAe1C,OATAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACrBf,KAAMkB,EACNL,SAAS,OAEVM,OAAM,SAACC,GAAD,OAASC,QAAQC,KAAKF,QAC9B,CAAE3B,IAEEqB,EDXyBS,CAAa9B,GAAhCa,EAF0B,EAEhCN,KAAca,EAFkB,EAElBA,QAErB,OACE,oCACE,4BAAMpB,GAEJoB,GAAW,0CAEb,yBAAKJ,UAAU,8CAEXH,EAAOJ,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,eACEqB,IAAMrB,EAAIC,IACLD,UEhBNsB,EAAe,WAAO,IAAD,EAEI9C,mBAAS,CAAC,gBAFd,mBAEzBQ,EAFyB,KAEbT,EAFa,KAIhC,OACE,oCACE,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEES,EAAWe,KAAI,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CACE+B,IAAM/B,EACNA,SAAWA,S,MCVvBiC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9f853ea5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue( e.target.value );\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue && inputValue.trim().length > 0) {\r\n      setCategories(categories => [ inputValue, ...categories]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=OmEP12EHcWDbUDwqjtwufA7Yht6siNu4`;\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n\r\n  const gifs = data.map(img => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_medium.url\r\n  }));\r\n  return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card-gif animate__animated animate__fadeInDown\">\r\n      <img className=\"gif-image\" src={ url } alt={ title }/>\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","// import React, { useEffect, useState } from 'react';\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data: images, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{ category }</h3>\r\n\r\n      { loading && <p>Cargando...</p>}\r\n\r\n      <div className=\"gif-grid animate__animated animate__fadeIn\">\r\n        {\r\n          images.map( img => (\r\n            <GifGridItem\r\n              key={ img.id }\r\n              { ...img }\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGif';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(imgs => setState({\r\n        data: imgs,\r\n        loading: false\r\n      }))\r\n      .catch((err) => console.warn(err));;\r\n  }, [ category ]);\r\n\r\n  return state\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif Expert App</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr/>\r\n      {\r\n        categories.map(category => (\r\n          <GifGrid\r\n            key={ category }\r\n            category={ category } />\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './components/GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <GifExpertApp />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}